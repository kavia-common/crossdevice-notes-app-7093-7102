{"is_source_file": true, "format": "C#", "description": "This file defines an interface for note data operations within a notes application, including creating, retrieving, updating, and deleting notes. It serves as a contract for implementing data repository classes.", "external_files": ["dotnet.Models"], "external_methods": [], "published": ["INotesRepository"], "classes": [{"name": "INotesRepository", "description": "Repository contract interface specifying asynchronous methods for CRUD operations on notes."}], "methods": [{"name": "CreateAsync", "description": "Creates a new note asynchronously."}, {"name": "GetByIdAsync", "description": "Retrieves a note by its unique identifier asynchronously."}, {"name": "GetByUserAsync", "description": "Retrieves a list of notes for a specific user with pagination, sorted by most recent."}, {"name": "UpdateAsync", "description": "Updates an existing note asynchronously."}, {"name": "DeleteAsync", "description": "Deletes a note by its identifier asynchronously."}], "calls": ["Task<Note>.CreateAsync", "Task<Note?>.GetByIdAsync", "Task<IEnumerable<Note>>.GetByUserAsync", "Task.UpdateAsync", "Task.DeleteAsync"], "search-terms": ["INotesRepository", "Note repository interface", "C# interface for notes", "CRUD notes", "async note operations"], "state": 2, "file_id": 12, "knowledge_revision": 25, "git_revision": "", "hash": "fd3c067958a0c4f4863a7cb33ff86035", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/Repositories/INotesRepository.cs", "revision_history": [{"25": ""}]}