{"is_source_file": true, "format": "C#", "description": "Interface definition for user data repository operations, including create, read, update, delete, and list functionalities.", "external_files": ["System", "System.Collections.Generic", "System.Threading", "System.Threading.Tasks", "dotnet.Models"], "external_methods": [], "published": ["CreateAsync", "GetByIdAsync", "GetByUsernameAsync", "GetAllAsync", "UpdateAsync", "DeleteAsync"], "classes": [{"name": "IUsersRepository", "description": "Repository contract interface for user data operations, defining asynchronous methods for managing user entities."}], "methods": [{"name": "CreateAsync", "description": "Creates a new user based on the provided user entity."}, {"name": "GetByIdAsync", "description": "Retrieves a user by their unique identifier."}, {"name": "GetByUsernameAsync", "description": "Retrieves a user by their username."}, {"name": "GetAllAsync", "description": "Lists users with optional pagination parameters."}, {"name": "UpdateAsync", "description": "Updates an existing user entity."}, {"name": "DeleteAsync", "description": "Deletes a user by their identifier."}], "calls": [], "search-terms": ["IUsersRepository", "User data operations", "Repository interface", "async data access", "user entity management"], "state": 2, "file_id": 10, "knowledge_revision": 21, "git_revision": "", "hash": "2e25a0e9977752d839c14f4c0c2d106a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/Repositories/IUsersRepository.cs", "revision_history": [{"21": ""}]}